[
    {
        "type_name": "class_declaration",
        "category": "class_definition",
        "languages": ["cs", "java", "js", "kt", "php", "ts", "tsx"]
    },
    {
        "type_name": "constructor_declaration",
        "category": "function",
        "languages": ["cs", "java"]
    },
    {
        "type_name": "conversion_operator_declaration",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "delegate_declaration",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "destructor_declaration",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "enum_declaration",
        "category": "enum_definition",
        "languages": ["cs", "java", "ts", "php", "tsx"]
    },
    {
        "type_name": "event_declaration",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "event_field_declaration",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "field_declaration",
        "category": "",
        "languages": ["cs", "go", "java", "cpp", "rs", "c"]
    },
    {
        "type_name": "indexer_declaration",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "interface_declaration",
        "category": "interface_definition",
        "languages": ["cs", "java", "php", "ts", "tsx"]
    },
    {
        "type_name": "method_declaration",
        "category": "function",
        "languages": ["cs", "go", "java", "php"]
    },
    {
        "type_name": "namespace_declaration",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "operator_declaration",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "property_declaration",
        "category": "",
        "languages": ["cs", "kt", "php"]
    },
    {
        "type_name": "record_declaration",
        "category": "record_definition",
        "languages": ["cs", "java"]
    },
    {
        "type_name": "struct_declaration",
        "category": "struct_definition",
        "languages": ["cs"]
    },
    {
        "type_name": "using_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "anonymous_method_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "anonymous_object_creation_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "array_creation_expression",
        "category": "",
        "languages": ["cs", "java", "php"]
    },
    {
        "type_name": "as_expression",
        "category": "",
        "languages": ["cs", "kt", "ts", "tsx"]
    },
    {
        "type_name": "assignment_expression",
        "category": "",
        "languages": ["cs", "java", "js", "php", "ts", "cpp", "tsx", "rs", "c"]
    },
    {
        "type_name": "await_expression",
        "category": "",
        "languages": ["cs", "js", "ts", "tsx", "rs"]
    },
    {
        "type_name": "base_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "binary_expression",
        "category": "",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c"]
    },
    {
        "type_name": "boolean_literal",
        "category": "",
        "languages": ["cs", "kt", "rs"]
    },
    {
        "type_name": "cast_expression",
        "category": "",
        "languages": ["cs", "java", "php", "cpp", "c"]
    },
    {
        "type_name": "character_literal",
        "category": "",
        "languages": ["cs", "java", "kt"]
    },
    {
        "type_name": "checked_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "conditional_access_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "conditional_expression",
        "category": "conditional_expression",
        "languages": ["cs", "php", "py", "cpp", "c"]
    },
    {
        "type_name": "default_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "element_access_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "element_binding_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "generic_name",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "global",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "identifier",
        "category": "",
        "languages": [
            "cs",
            "go",
            "java",
            "js",
            "kt",
            "ts",
            "py",
            "cpp",
            "tsx",
            "rb",
            "rs",
            "c",
            "pl"
        ]
    },
    {
        "type_name": "implicit_array_creation_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "implicit_object_creation_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "implicit_stack_alloc_array_creation_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "initializer_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "integer_literal",
        "category": "",
        "languages": ["cs", "kt", "rs"]
    },
    {
        "type_name": "interpolated_string_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "invocation_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "is_expression",
        "category": "conditional_expression",
        "languages": ["cs"]
    },
    {
        "type_name": "is_pattern_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "lambda_expression",
        "category": "function",
        "deactivated_for_languages": ["cpp"],
        "languages": ["cs", "java", "cpp"]
    },
    {
        "type_name": "make_ref_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "member_access_expression",
        "category": "",
        "languages": ["cs", "php"]
    },
    {
        "type_name": "null_literal",
        "category": "",
        "languages": ["cs", "java"]
    },
    {
        "type_name": "object_creation_expression",
        "category": "",
        "languages": ["cs", "java", "php"]
    },
    {
        "type_name": "parenthesized_expression",
        "category": "",
        "languages": [
            "cs",
            "go",
            "java",
            "js",
            "kt",
            "php",
            "ts",
            "py",
            "cpp",
            "tsx",
            "rs",
            "sh",
            "c",
            "pl"
        ]
    },
    {
        "type_name": "postfix_unary_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "prefix_unary_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "query_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "range_expression",
        "category": "",
        "languages": ["cs", "kt", "rs"]
    },
    {
        "type_name": "real_literal",
        "category": "",
        "languages": ["cs", "kt"]
    },
    {
        "type_name": "ref_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "ref_type_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "ref_value_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "size_of_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "stack_alloc_array_creation_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "string_literal",
        "category": "",
        "languages": ["cs", "java", "cpp", "kt", "rs", "c"]
    },
    {
        "type_name": "switch_expression",
        "category": "",
        "languages": ["cs", "java"]
    },
    {
        "type_name": "this_expression",
        "category": "",
        "languages": ["cs", "kt"]
    },
    {
        "type_name": "throw_expression",
        "category": "",
        "languages": ["cs", "php"]
    },
    {
        "type_name": "tuple_expression",
        "category": "",
        "languages": ["cs", "rs"]
    },
    {
        "type_name": "type_of_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "verbatim_string_literal",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "with_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "block",
        "category": "",
        "languages": ["cs", "go", "java", "py", "rb", "rs", "pl"]
    },
    {
        "type_name": "break_statement",
        "category": "",
        "languages": ["cs", "go", "java", "js", "php", "ts", "py", "cpp", "tsx", "c"]
    },
    {
        "type_name": "checked_statement",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "continue_statement",
        "category": "",
        "languages": ["cs", "go", "java", "js", "php", "ts", "py", "cpp", "tsx", "c"]
    },
    {
        "type_name": "do_statement",
        "category": "loop",
        "languages": ["cs", "java", "js", "php", "ts", "cpp", "tsx", "c"]
    },
    {
        "type_name": "empty_statement",
        "category": "",
        "languages": ["cs", "go", "js", "php", "ts", "tsx", "rb", "rs"]
    },
    {
        "type_name": "expression_statement",
        "category": "",
        "languages": ["cs", "java", "js", "php", "ts", "py", "cpp", "go", "tsx", "rs", "c"]
    },
    {
        "type_name": "fixed_statement",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "for_each_statement",
        "category": "loop",
        "languages": ["cs"]
    },
    {
        "type_name": "for_statement",
        "category": "loop",
        "languages": ["cs", "go", "java", "js", "kt", "php", "ts", "py", "cpp", "tsx", "sh", "c"]
    },
    {
        "type_name": "goto_statement",
        "category": "",
        "languages": ["cs", "go", "php", "cpp", "c"]
    },
    {
        "type_name": "if_statement",
        "category": "if",
        "languages": ["cs", "go", "java", "js", "php", "ts", "py", "cpp", "tsx", "sh", "c", "pl"]
    },
    {
        "type_name": "labeled_statement",
        "category": "",
        "languages": ["cs", "go", "java", "js", "ts", "cpp", "tsx", "c"]
    },
    {
        "type_name": "local_declaration_statement",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "local_function_statement",
        "category": "function",
        "languages": ["cs"]
    },
    {
        "type_name": "lock_statement",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "return_statement",
        "category": "",
        "languages": ["cs", "go", "java", "js", "php", "ts", "py", "cpp", "tsx", "c"]
    },
    {
        "type_name": "switch_statement",
        "category": "",
        "languages": ["cs", "js", "php", "ts", "cpp", "tsx", "c"]
    },
    {
        "type_name": "throw_statement",
        "category": "",
        "languages": ["cs", "java", "js", "ts", "cpp", "tsx"]
    },
    {
        "type_name": "try_statement",
        "category": "",
        "languages": ["cs", "java", "js", "php", "ts", "py", "cpp", "tsx"]
    },
    {
        "type_name": "unsafe_statement",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "using_statement",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "while_statement",
        "category": "loop",
        "languages": ["cs", "java", "js", "kt", "php", "ts", "py", "cpp", "tsx", "sh", "c", "pl"]
    },
    {
        "type_name": "yield_statement",
        "category": "",
        "languages": ["cs", "java"]
    },
    {
        "type_name": "alias_qualified_name",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "array_type",
        "category": "",
        "languages": ["cs", "go", "java", "ts", "tsx", "rs"]
    },
    {
        "type_name": "function_pointer_type",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "implicit_type",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "nullable_type",
        "category": "",
        "languages": ["cs", "kt"]
    },
    {
        "type_name": "pointer_type",
        "category": "",
        "languages": ["cs", "go", "rs"]
    },
    {
        "type_name": "predefined_type",
        "category": "",
        "languages": ["cs", "ts", "tsx"]
    },
    {
        "type_name": "qualified_name",
        "category": "",
        "languages": ["cs", "php"]
    },
    {
        "type_name": "tuple_type",
        "category": "",
        "languages": ["cs", "ts", "tsx", "rs"]
    },
    {
        "type_name": "accessor_declaration",
        "category": "function",
        "languages": ["cs"]
    },
    {
        "type_name": "accessor_list",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "argument",
        "category": "",
        "languages": ["cs", "php", "pl"]
    },
    {
        "type_name": "argument_list",
        "category": "",
        "languages": ["cs", "go", "java", "py", "cpp", "rb", "c"]
    },
    {
        "type_name": "array_rank_specifier",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "arrow_expression_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "assignment_operator",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "attribute",
        "category": "",
        "languages": ["cs", "py", "cpp", "php", "rs", "c"]
    },
    {
        "type_name": "attribute_argument",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "attribute_argument_list",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "attribute_list",
        "category": "",
        "languages": ["cs", "php"]
    },
    {
        "type_name": "attribute_target_specifier",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "base_list",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "binary_expression_!=",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c"],
        "grammar_type_name": "binary_expression",
        "operator": "!="
    },
    {
        "type_name": "binary_expression_%",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "%"
    },
    {
        "type_name": "binary_expression_&",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "&"
    },
    {
        "type_name": "binary_expression_&&",
        "category": "logical_binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "&&"
    },
    {
        "type_name": "binary_expression_*",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "*"
    },
    {
        "type_name": "binary_expression_+",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "+"
    },
    {
        "type_name": "binary_expression_-",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "-"
    },
    {
        "type_name": "binary_expression_/",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "/"
    },
    {
        "type_name": "binary_expression_<",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c"],
        "grammar_type_name": "binary_expression",
        "operator": "<"
    },
    {
        "type_name": "binary_expression_<<",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "<<"
    },
    {
        "type_name": "binary_expression_<=",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c"],
        "grammar_type_name": "binary_expression",
        "operator": "<="
    },
    {
        "type_name": "binary_expression_==",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c"],
        "grammar_type_name": "binary_expression",
        "operator": "=="
    },
    {
        "type_name": "binary_expression_>",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c"],
        "grammar_type_name": "binary_expression",
        "operator": ">"
    },
    {
        "type_name": "binary_expression_>=",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c"],
        "grammar_type_name": "binary_expression",
        "operator": ">="
    },
    {
        "type_name": "binary_expression_>>",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": ">>"
    },
    {
        "type_name": "binary_expression_??",
        "category": "logical_binary_expression",
        "languages": ["cs", "js", "ts", "php", "tsx"],
        "grammar_type_name": "binary_expression",
        "operator": "??"
    },
    {
        "type_name": "binary_expression_^",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "^"
    },
    {
        "type_name": "binary_expression_|",
        "category": "binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "|"
    },
    {
        "type_name": "binary_expression_||",
        "category": "logical_binary_expression",
        "languages": ["cs", "go", "java", "js", "php", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "||"
    },
    {
        "type_name": "bracketed_argument_list",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "bracketed_parameter_list",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "case_pattern_switch_label",
        "category": "case_label",
        "languages": ["cs"]
    },
    {
        "type_name": "case_switch_label",
        "category": "case_label",
        "languages": ["cs"]
    },
    {
        "type_name": "catch_clause",
        "category": "catch_block",
        "languages": ["cs", "java", "js", "php", "ts", "cpp", "tsx"]
    },
    {
        "type_name": "catch_declaration",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "catch_filter_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "compilation_unit",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "constant_pattern",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "constructor_constraint",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "constructor_initializer",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "declaration_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "declaration_list",
        "category": "",
        "languages": ["cs", "php", "cpp", "rs", "c"]
    },
    {
        "type_name": "declaration_pattern",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "default_switch_label",
        "category": "default_label",
        "languages": ["cs"]
    },
    {
        "type_name": "enum_member_declaration",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "enum_member_declaration_list",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "equals_value_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "explicit_interface_specifier",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "extern_alias_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "finally_clause",
        "category": "",
        "languages": ["cs", "java", "js", "php", "ts", "py", "tsx"]
    },
    {
        "type_name": "from_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "function_pointer_calling_convention",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "function_pointer_parameter",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "function_pointer_unmanaged_calling_convention",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "function_pointer_unmanaged_calling_convention_list",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "global_attribute_list",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "global_statement",
        "category": "",
        "languages": ["cs", "py"]
    },
    {
        "type_name": "group_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "interpolated_string_text",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "interpolated_verbatim_string_text",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "interpolation",
        "category": "",
        "languages": ["cs", "py", "rb", "pl"]
    },
    {
        "type_name": "interpolation_alignment_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "interpolation_format_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "join_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "join_into_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "label_name",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "let_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "member_binding_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "modifier",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "name_colon",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "name_equals",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "negated_pattern",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "order_by_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "parameter",
        "category": "",
        "languages": ["cs", "kt", "rs"]
    },
    {
        "type_name": "parameter_list",
        "category": "",
        "languages": ["cs", "go", "cpp", "c"]
    },
    {
        "type_name": "parameter_modifier",
        "category": "",
        "languages": ["cs", "kt"]
    },
    {
        "type_name": "parenthesized_pattern",
        "category": "",
        "languages": ["cs", "rb"]
    },
    {
        "type_name": "parenthesized_variable_designation",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "positional_pattern_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "primary_constructor_base_type",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "property_pattern_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "query_continuation",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "recursive_pattern",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "relational_pattern",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "select_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "simple_assignment_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "subpattern",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "switch_body",
        "category": "",
        "languages": ["cs", "js", "ts", "tsx"]
    },
    {
        "type_name": "switch_expression_arm",
        "category": "conditional_expression",
        "languages": ["cs"]
    },
    {
        "type_name": "switch_section",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "tuple_element",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "tuple_pattern",
        "category": "",
        "languages": ["cs", "py", "rs"]
    },
    {
        "type_name": "type_argument_list",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "type_constraint",
        "category": "",
        "languages": ["cs", "kt"]
    },
    {
        "type_name": "type_parameter",
        "category": "",
        "languages": ["cs", "java", "kt", "ts", "py", "tsx"]
    },
    {
        "type_name": "type_parameter_constraint",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "type_parameter_constraints_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "type_parameter_list",
        "category": "",
        "languages": ["cs", "go"]
    },
    {
        "type_name": "type_pattern",
        "category": "",
        "languages": ["cs", "java"]
    },
    {
        "type_name": "var_pattern",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "variable_declaration",
        "category": "",
        "languages": ["cs", "js", "kt", "ts", "tsx", "pl"]
    },
    {
        "type_name": "variable_declarator",
        "category": "",
        "languages": ["cs", "java", "js", "ts", "tsx"]
    },
    {
        "type_name": "when_clause",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "where_clause",
        "category": "",
        "languages": ["cs", "rs"]
    },
    {
        "type_name": "with_initializer_expression",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": ";",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "await",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "class",
        "category": "class_definition",
        "languages": ["js", "ts", "tsx", "rb"]
    },
    {
        "type_name": "comment",
        "category": "comment",
        "languages": [
            "cs",
            "go",
            "js",
            "php",
            "ts",
            "py",
            "cpp",
            "tsx",
            "rb",
            "sh",
            "c",
            "json",
            "yaml"
        ]
    },
    {
        "type_name": "discard",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "escape_sequence",
        "category": "",
        "languages": [
            "cs",
            "go",
            "js",
            "ts",
            "py",
            "cpp",
            "java",
            "php",
            "tsx",
            "rb",
            "rs",
            "c",
            "json",
            "yaml",
            "pl"
        ]
    },
    {
        "type_name": "false",
        "category": "",
        "languages": ["go", "java", "js", "ts", "py", "cpp", "tsx", "rb", "c", "json", "pl"]
    },
    {
        "type_name": "module",
        "category": "",
        "deactivated_for_languages": ["ts", "tsx", "rb"],
        "languages": ["ts", "py", "tsx", "rb"]
    },
    {
        "type_name": "set",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "this",
        "category": "",
        "languages": ["java", "js", "ts", "cpp", "tsx"]
    },
    {
        "type_name": "true",
        "category": "",
        "languages": ["go", "java", "js", "ts", "py", "cpp", "tsx", "rb", "c", "json", "pl"]
    },
    {
        "type_name": "type",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "virtual",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "void_keyword",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "yield",
        "category": "",
        "languages": ["py", "rb"]
    },
    {
        "type_name": "call_expression",
        "category": "",
        "languages": ["go", "js", "kt", "ts", "cpp", "tsx", "rs", "c", "pl"]
    },
    {
        "type_name": "composite_literal",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "float_literal",
        "category": "",
        "languages": ["go", "rs"]
    },
    {
        "type_name": "func_literal",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "imaginary_literal",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "index_expression",
        "category": "",
        "languages": ["go", "rs"]
    },
    {
        "type_name": "int_literal",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "interpreted_string_literal",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "nil",
        "category": "",
        "languages": ["go", "rb"]
    },
    {
        "type_name": "raw_string_literal",
        "category": "",
        "languages": ["go", "cpp", "rs"]
    },
    {
        "type_name": "rune_literal",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "selector_expression",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "slice_expression",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "type_assertion_expression",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "type_conversion_expression",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "unary_expression",
        "category": "",
        "languages": ["go", "java", "js", "ts", "cpp", "tsx", "rs", "sh", "c", "pl"]
    },
    {
        "type_name": "_simple_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "assignment_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "dec_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "inc_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "send_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "short_var_declaration",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "_simple_type",
        "category": "",
        "languages": ["go", "java"]
    },
    {
        "type_name": "channel_type",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "function_type",
        "category": "",
        "languages": ["go", "kt", "ts", "tsx", "rs"]
    },
    {
        "type_name": "interface_type",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "map_type",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "qualified_type",
        "category": "",
        "languages": ["go", "rs"]
    },
    {
        "type_name": "slice_type",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "struct_type",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "type_identifier",
        "category": "",
        "languages": ["go", "java", "kt", "ts", "cpp", "tsx", "rs", "c"]
    },
    {
        "type_name": "const_declaration",
        "category": "",
        "languages": ["go", "php"]
    },
    {
        "type_name": "defer_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "expression_switch_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "fallthrough_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "go_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "select_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "type_declaration",
        "category": "interface_definition",
        "languages": ["go"]
    },
    {
        "type_name": "type_switch_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "var_declaration",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "parenthesized_type",
        "category": "",
        "languages": ["go", "kt", "ts", "tsx"]
    },
    {
        "type_name": "binary_expression_&^",
        "category": "binary_expression",
        "languages": ["go"],
        "grammar_type_name": "binary_expression",
        "operator": "&^"
    },
    {
        "type_name": "communication_case",
        "category": "case_label",
        "languages": ["go"]
    },
    {
        "type_name": "const_spec",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "default_case",
        "category": "default_label",
        "languages": ["go"]
    },
    {
        "type_name": "dot",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "expression_case",
        "category": "case_label",
        "languages": ["go"]
    },
    {
        "type_name": "expression_list",
        "category": "",
        "languages": ["go", "py"]
    },
    {
        "type_name": "field_declaration_list",
        "category": "",
        "languages": ["go", "cpp", "rs", "c"]
    },
    {
        "type_name": "for_clause",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "function_declaration",
        "category": "function",
        "languages": ["go", "js", "kt", "ts", "tsx"]
    },
    {
        "type_name": "implicit_length_array_type",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "import_declaration",
        "category": "",
        "languages": ["go", "java"]
    },
    {
        "type_name": "import_spec",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "import_spec_list",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "keyed_element",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "literal_value",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "method_spec",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "package_clause",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "parameter_declaration",
        "category": "",
        "languages": ["go", "cpp", "c"]
    },
    {
        "type_name": "range_clause",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "receive_statement",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "source_file",
        "category": "",
        "languages": ["go", "kt", "rs", "pl"]
    },
    {
        "type_name": "type_alias",
        "category": "",
        "languages": ["go", "kt"]
    },
    {
        "type_name": "type_case",
        "category": "case_label",
        "languages": ["go"]
    },
    {
        "type_name": "type_spec",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "var_spec",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "variadic_argument",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "variadic_parameter_declaration",
        "category": "",
        "languages": ["go", "cpp"]
    },
    {
        "type_name": "blank_identifier",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "field_identifier",
        "category": "",
        "languages": ["go", "cpp", "rs", "c"]
    },
    {
        "type_name": "import",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "package_identifier",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "_literal",
        "category": "",
        "languages": ["java", "php", "rs"]
    },
    {
        "type_name": "binary_integer_literal",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "decimal_floating_point_literal",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "decimal_integer_literal",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "hex_floating_point_literal",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "hex_integer_literal",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "octal_integer_literal",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "boolean_type",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "floating_point_type",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "generic_type",
        "category": "",
        "languages": ["java", "ts", "go", "py", "tsx", "rs"]
    },
    {
        "type_name": "integral_type",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "scoped_type_identifier",
        "category": "",
        "languages": ["java", "rs"]
    },
    {
        "type_name": "void_type",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "_unannotated_type",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "annotated_type",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "declaration",
        "category": "",
        "languages": ["java", "js", "ts", "cpp", "tsx", "c"]
    },
    {
        "type_name": "annotation_type_declaration",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "module_declaration",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "package_declaration",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "instanceof_expression",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "primary_expression",
        "category": "",
        "languages": ["java", "js", "ts", "py", "tsx"]
    },
    {
        "type_name": "ternary_expression",
        "category": "conditional_expression",
        "languages": ["java", "js", "ts", "tsx", "sh", "pl"]
    },
    {
        "type_name": "update_expression",
        "category": "",
        "languages": ["java", "js", "php", "ts", "cpp", "tsx", "c"]
    },
    {
        "type_name": "array_access",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "class_literal",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "field_access",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "method_invocation",
        "category": "",
        "languages": ["java", "pl"]
    },
    {
        "type_name": "method_reference",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "assert_statement",
        "category": "",
        "languages": ["java", "py"]
    },
    {
        "type_name": "enhanced_for_statement",
        "category": "loop",
        "languages": ["java"]
    },
    {
        "type_name": "local_variable_declaration",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "synchronized_statement",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "try_with_resources_statement",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "annotation",
        "category": "",
        "languages": ["java", "kt"]
    },
    {
        "type_name": "annotation_argument_list",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "annotation_type_body",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "annotation_type_element_declaration",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "array_initializer",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "asterisk",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "binary_expression_>>>",
        "category": "binary_expression",
        "languages": ["java", "js", "ts", "tsx"],
        "grammar_type_name": "binary_expression",
        "operator": ">>>"
    },
    {
        "type_name": "catch_formal_parameter",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "catch_type",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "class_body",
        "category": "",
        "languages": ["java", "js", "kt", "ts", "tsx"]
    },
    {
        "type_name": "constant_declaration",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "constructor_body",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "dimensions",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "dimensions_expr",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "element_value_array_initializer",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "element_value_pair",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "enum_body",
        "category": "",
        "languages": ["java", "ts", "tsx"]
    },
    {
        "type_name": "enum_body_declarations",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "enum_constant",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "explicit_constructor_invocation",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "extends_interfaces",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "formal_parameter",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "formal_parameters",
        "category": "",
        "languages": ["java", "js", "php", "ts", "tsx"]
    },
    {
        "type_name": "inferred_parameters",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "interface_body",
        "category": "",
        "languages": ["java", "ts", "tsx"]
    },
    {
        "type_name": "marker_annotation",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "modifiers",
        "category": "",
        "languages": ["java", "kt"]
    },
    {
        "type_name": "module_body",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "program",
        "category": "",
        "languages": ["java", "js", "php", "ts", "tsx", "rb", "sh"]
    },
    {
        "type_name": "receiver_parameter",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "requires_modifier",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "resource",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "resource_specification",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "scoped_identifier",
        "category": "",
        "languages": ["java", "rs"]
    },
    {
        "type_name": "spread_parameter",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "static_initializer",
        "category": "function",
        "languages": ["java"]
    },
    {
        "type_name": "super_interfaces",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "superclass",
        "category": "",
        "languages": ["java", "rb"]
    },
    {
        "type_name": "switch_block",
        "category": "",
        "languages": ["java", "php"]
    },
    {
        "type_name": "switch_label",
        "category": "case_label",
        "languages": ["java"]
    },
    {
        "type_name": "throws",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "type_arguments",
        "category": "",
        "languages": ["java", "kt", "ts", "go", "tsx", "rs"]
    },
    {
        "type_name": "type_bound",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "type_parameters",
        "category": "",
        "languages": ["java", "kt", "ts", "tsx", "rs"]
    },
    {
        "type_name": "wildcard",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "float",
        "category": "",
        "languages": ["php", "py", "rb"]
    },
    {
        "type_name": "super",
        "category": "",
        "languages": ["java", "js", "ts", "tsx", "rb", "rs", "pl"]
    },
    {
        "type_name": "generator_function_declaration",
        "category": "function",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "lexical_declaration",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "augmented_assignment_expression",
        "category": "",
        "languages": ["js", "php", "ts", "tsx"]
    },
    {
        "type_name": "jsx_element",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "jsx_self_closing_element",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "new_expression",
        "category": "",
        "languages": ["js", "ts", "cpp", "tsx"]
    },
    {
        "type_name": "yield_expression",
        "category": "",
        "languages": ["js", "php", "ts", "tsx", "rs"]
    },
    {
        "type_name": "pattern",
        "category": "",
        "languages": ["java", "rb"]
    },
    {
        "type_name": "array_pattern",
        "category": "",
        "languages": ["js", "ts", "tsx", "rb"]
    },
    {
        "type_name": "object_pattern",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "rest_pattern",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "array",
        "category": "nesting",
        "languages": ["js", "ts", "tsx", "rb", "sh", "json", "pl"]
    },
    {
        "type_name": "arrow_function",
        "category": "function",
        "languages": ["js", "ts", "php", "tsx"]
    },
    {
        "type_name": "generator_function",
        "category": "function",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "member_expression",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "meta_property",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "null",
        "category": "",
        "languages": ["js", "php", "ts", "cpp", "tsx", "c", "json"]
    },
    {
        "type_name": "number",
        "category": "",
        "languages": ["js", "ts", "tsx", "sh", "json"]
    },
    {
        "type_name": "object",
        "category": "nesting",
        "languages": ["js", "ts", "tsx", "json"]
    },
    {
        "type_name": "regex",
        "category": "",
        "languages": ["js", "ts", "tsx", "rb", "sh"]
    },
    {
        "type_name": "string",
        "category": "",
        "languages": ["js", "php", "ts", "py", "tsx", "rb", "sh", "json"]
    },
    {
        "type_name": "subscript_expression",
        "category": "",
        "languages": ["js", "php", "ts", "cpp", "tsx", "c"]
    },
    {
        "type_name": "template_string",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "undefined",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "debugger_statement",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "export_statement",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "for_in_statement",
        "category": "loop",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "import_statement",
        "category": "",
        "languages": ["js", "ts", "py", "tsx"]
    },
    {
        "type_name": "statement_block",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "with_statement",
        "category": "",
        "languages": ["js", "ts", "py", "tsx"]
    },
    {
        "type_name": "arguments",
        "category": "",
        "languages": ["js", "php", "ts", "tsx", "rs", "pl"]
    },
    {
        "type_name": "assignment_pattern",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "binary_expression_!==",
        "category": "binary_expression",
        "languages": ["js", "php", "ts", "tsx"],
        "grammar_type_name": "binary_expression",
        "operator": "!=="
    },
    {
        "type_name": "binary_expression_**",
        "category": "binary_expression",
        "languages": ["js", "ts", "tsx", "php", "sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "**"
    },
    {
        "type_name": "binary_expression_===",
        "category": "binary_expression",
        "languages": ["js", "php", "ts", "tsx"],
        "grammar_type_name": "binary_expression",
        "operator": "==="
    },
    {
        "type_name": "binary_expression_in",
        "category": "binary_expression",
        "languages": ["js", "ts", "tsx"],
        "grammar_type_name": "binary_expression",
        "operator": "in"
    },
    {
        "type_name": "binary_expression_instanceof",
        "category": "binary_expression",
        "languages": ["js", "php", "ts", "tsx"],
        "grammar_type_name": "binary_expression",
        "operator": "instanceof"
    },
    {
        "type_name": "class_heritage",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "computed_property_name",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "decorator",
        "category": "",
        "languages": ["js", "ts", "py", "tsx"]
    },
    {
        "type_name": "else_clause",
        "category": "",
        "languages": ["js", "php", "ts", "py", "cpp", "tsx", "rs", "sh", "c", "pl"]
    },
    {
        "type_name": "export_clause",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "export_specifier",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "import_clause",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "import_specifier",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "jsx_attribute",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "jsx_closing_element",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "jsx_expression",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "jsx_namespace_name",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "jsx_opening_element",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "method_definition",
        "category": "function",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "named_imports",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "namespace_import",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "nested_identifier",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "object_assignment_pattern",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "pair",
        "category": "",
        "languages": ["js", "php", "ts", "py", "tsx", "rb", "json"]
    },
    {
        "type_name": "pair_pattern",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "public_field_definition",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "sequence_expression",
        "category": "",
        "languages": ["js", "php", "ts", "tsx"]
    },
    {
        "type_name": "spread_element",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "switch_case",
        "category": "case_label",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "switch_default",
        "category": "default_label",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "template_substitution",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "hash_bang_line",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "jsx_text",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "property_identifier",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "regex_flags",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "regex_pattern",
        "category": "",
        "languages": ["js", "ts", "tsx", "pl"]
    },
    {
        "type_name": "shorthand_property_identifier",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "shorthand_property_identifier_pattern",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "statement_identifier",
        "category": "",
        "languages": ["js", "ts", "cpp", "tsx", "c"]
    },
    {
        "type_name": "additive_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "annotated_lambda",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "anonymous_function",
        "category": "",
        "languages": ["kt", "pl"]
    },
    {
        "type_name": "anonymous_initializer",
        "category": "function",
        "languages": ["kt"]
    },
    {
        "type_name": "assignment",
        "category": "",
        "languages": ["kt", "py", "rb"]
    },
    {
        "type_name": "call_suffix",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "callable_reference",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "catch_block",
        "category": "catch_block",
        "languages": ["kt"]
    },
    {
        "type_name": "check_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "class_modifier",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "class_parameter",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "collection_literal",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "companion_object",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "comparison_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "conjunction_expression",
        "category": "logical_binary_expression",
        "languages": ["kt"]
    },
    {
        "type_name": "constructor_delegation_call",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "constructor_invocation",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "control_structure_body",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "delegation_specifier",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "directly_assignable_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "disjunction_expression",
        "category": "logical_binary_expression",
        "languages": ["kt"]
    },
    {
        "type_name": "do_while_statement",
        "category": "loop",
        "languages": ["kt"]
    },
    {
        "type_name": "elvis_expression",
        "category": "conditional_expression",
        "languages": ["kt"]
    },
    {
        "type_name": "enum_class_body",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "enum_entry",
        "category": "enum_definition",
        "languages": ["kt"]
    },
    {
        "type_name": "equality_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "explicit_delegation",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "file_annotation",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "finally_block",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "function_body",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "function_modifier",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "function_type_parameters",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "if_expression",
        "category": "if",
        "languages": ["kt", "rs"]
    },
    {
        "type_name": "import_alias",
        "category": "",
        "languages": ["kt", "ts", "tsx"]
    },
    {
        "type_name": "import_header",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "indexing_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "indexing_suffix",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "infix_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "inheritance_modifier",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "interpolated_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "interpolated_identifier",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "jump_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "lambda_literal",
        "category": "function",
        "languages": ["kt"]
    },
    {
        "type_name": "lambda_parameters",
        "category": "",
        "languages": ["kt", "py", "rb"]
    },
    {
        "type_name": "long_literal",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "member_modifier",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "multiplicative_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "navigation_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "navigation_suffix",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "object_declaration",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "object_literal",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "package_header",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "parameter_modifiers",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "parameter_with_optional_type",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "parenthesized_user_type",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "platform_modifier",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "postfix_expression",
        "category": "",
        "languages": ["kt", "sh"]
    },
    {
        "type_name": "prefix_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "primary_constructor",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "property_delegate",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "range_test",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "secondary_constructor",
        "category": "function",
        "languages": ["kt"]
    },
    {
        "type_name": "setter",
        "category": "",
        "languages": ["kt", "rb"]
    },
    {
        "type_name": "shebang_line",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "simple_identifier",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "spread_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "statements",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "super_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "try_expression",
        "category": "",
        "languages": ["kt", "rs"]
    },
    {
        "type_name": "type_constraints",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "type_modifiers",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "type_parameter_modifiers",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "type_projection",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "type_projection_modifiers",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "type_test",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "unsigned_literal",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "use_site_target",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "user_type",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "value_argument",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "value_arguments",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "variance_modifier",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "visibility_modifier",
        "category": "",
        "languages": ["kt", "php", "rs"]
    },
    {
        "type_name": "when_condition",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "when_entry",
        "category": "case_label",
        "languages": ["kt"]
    },
    {
        "type_name": "when_expression",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "when_subject",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "bin_literal",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "hex_literal",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "label",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "property_modifier",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "reification_modifier",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "_primary_expression",
        "category": "",
        "languages": ["php", "sh"]
    },
    {
        "type_name": "clone_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "include_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "include_once_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "require_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "require_once_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "unary_op_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "boolean",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "heredoc",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "integer",
        "category": "",
        "languages": ["php", "py", "rb", "pl"]
    },
    {
        "type_name": "anonymous_function_creation_expression",
        "category": "function",
        "languages": ["php"]
    },
    {
        "type_name": "class_constant_access_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "dynamic_variable_name",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "function_call_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "member_call_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "print_intrinsic",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "scoped_call_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "scoped_property_access_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "shell_command_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "variable_name",
        "category": "",
        "languages": ["php", "sh"]
    },
    {
        "type_name": "compound_statement",
        "category": "",
        "languages": ["php", "cpp", "sh", "c"]
    },
    {
        "type_name": "declare_statement",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "echo_statement",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "foreach_statement",
        "category": "loop",
        "languages": ["php"]
    },
    {
        "type_name": "function_definition",
        "category": "function",
        "deactivated_for_languages": ["cpp", "c"],
        "languages": ["php", "py", "cpp", "sh", "c", "pl"]
    },
    {
        "type_name": "function_static_declaration",
        "category": "function",
        "languages": ["php"]
    },
    {
        "type_name": "global_declaration",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "named_label_statement",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "namespace_definition",
        "category": "",
        "languages": ["php", "cpp"]
    },
    {
        "type_name": "namespace_use_declaration",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "trait_declaration",
        "category": "trait_definition",
        "languages": ["php"]
    },
    {
        "type_name": "unset_statement",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "optional_type",
        "category": "",
        "languages": ["php", "ts", "tsx"]
    },
    {
        "type_name": "primitive_type",
        "category": "",
        "languages": ["php", "cpp", "rs", "c"]
    },
    {
        "type_name": "anonymous_function_use_clause",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "array_element_initializer",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "base_clause",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "binary_expression_.",
        "category": "binary_expression",
        "languages": ["php", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "."
    },
    {
        "type_name": "binary_expression_<=>",
        "category": "binary_expression",
        "languages": ["php", "cpp", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "<=>"
    },
    {
        "type_name": "binary_expression_<>",
        "category": "binary_expression",
        "languages": ["php"],
        "grammar_type_name": "binary_expression",
        "operator": "<>"
    },
    {
        "type_name": "binary_expression_and",
        "category": "logical_binary_expression",
        "languages": ["php", "cpp"],
        "grammar_type_name": "binary_expression",
        "operator": "and"
    },
    {
        "type_name": "binary_expression_or",
        "category": "logical_binary_expression",
        "languages": ["php", "cpp", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "or"
    },
    {
        "type_name": "binary_expression_xor",
        "category": "logical_binary_expression",
        "deactivated_for_languages": ["cpp"],
        "languages": ["php", "cpp", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "xor"
    },
    {
        "type_name": "case_statement",
        "category": "case_label",
        "deactivated_for_languages": ["sh"],
        "languages": ["php", "cpp", "sh", "c"]
    },
    {
        "type_name": "cast_type",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "class_interface_clause",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "colon_block",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "const_element",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "declare_directive",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "default_statement",
        "category": "default_label",
        "languages": ["php"]
    },
    {
        "type_name": "else_if_clause",
        "category": "if",
        "languages": ["php"]
    },
    {
        "type_name": "list_literal",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "name",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "namespace_aliasing_clause",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "namespace_name",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "namespace_name_as_prefix",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "namespace_use_clause",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "namespace_use_group",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "namespace_use_group_clause",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "property_element",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "property_initializer",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "relative_scope",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "simple_parameter",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "static_modifier",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "static_variable_declaration",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "text",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "text_interpolation",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "use_as_clause",
        "category": "",
        "languages": ["php", "rs"]
    },
    {
        "type_name": "use_declaration",
        "category": "",
        "languages": ["php", "rs"]
    },
    {
        "type_name": "use_instead_of_clause",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "use_list",
        "category": "",
        "languages": ["php", "rs"]
    },
    {
        "type_name": "variadic_parameter",
        "category": "",
        "languages": ["php", "cpp", "rs", "c"]
    },
    {
        "type_name": "variadic_unpacking",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "list",
        "category": "conditional_expression",
        "deactivated_for_languages": ["py"],
        "languages": ["py", "sh"]
    },
    {
        "type_name": "php_tag",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "var_modifier",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "conditional_type",
        "category": "conditional_expression",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "existential_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "flow_maybe_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "index_type_query",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "literal_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "lookup_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "nested_type_identifier",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "object_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "type_query",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "abstract_class_declaration",
        "category": "class_definition",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "ambient_declaration",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "function_signature",
        "category": "",
        "languages": ["ts", "tsx", "pl"]
    },
    {
        "type_name": "internal_module",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "type_alias_declaration",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "type_assertion",
        "category": "",
        "languages": ["ts"]
    },
    {
        "type_name": "non_null_expression",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "abstract_method_signature",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "accessibility_modifier",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "asserts",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "call_signature",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "constraint",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "construct_signature",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "constructor_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "default_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "enum_assignment",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "extends_clause",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "implements_clause",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "import_require_clause",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "index_signature",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "infer_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "intersection_type",
        "category": "",
        "languages": ["ts", "php", "tsx"]
    },
    {
        "type_name": "mapped_type_clause",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "method_signature",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "omitting_type_annotation",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "opting_type_annotation",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "optional_parameter",
        "category": "",
        "languages": ["ts", "tsx", "rb"]
    },
    {
        "type_name": "property_signature",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "readonly_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "required_parameter",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "rest_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "type_annotation",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "type_predicate",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "type_predicate_annotation",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "union_type",
        "category": "",
        "languages": ["ts", "go", "php", "py", "tsx"]
    },
    {
        "type_name": "class_definition",
        "category": "class_definition",
        "languages": ["py"]
    },
    {
        "type_name": "decorated_definition",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "delete_statement",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "exec_statement",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "future_import_statement",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "import_from_statement",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "nonlocal_statement",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "pass_statement",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "print_statement",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "raise_statement",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "boolean_operator",
        "category": "conditional_expression",
        "languages": ["py"]
    },
    {
        "type_name": "comparison_operator",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "lambda",
        "category": "function",
        "languages": ["py", "rb"]
    },
    {
        "type_name": "named_expression",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "not_operator",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "default_parameter",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "dictionary_splat_pattern",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "list_splat_pattern",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "typed_default_parameter",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "typed_parameter",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "list_pattern",
        "category": "",
        "languages": ["py", "cs"]
    },
    {
        "type_name": "subscript",
        "category": "",
        "languages": ["py", "sh"]
    },
    {
        "type_name": "binary_operator",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "call",
        "category": "",
        "languages": ["py", "rb"]
    },
    {
        "type_name": "concatenated_string",
        "category": "",
        "languages": ["py", "cpp", "c"]
    },
    {
        "type_name": "dictionary",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "dictionary_comprehension",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "ellipsis",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "generator_expression",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "list_comprehension",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "none",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "set_comprehension",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "tuple",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "unary_operator",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "aliased_import",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "augmented_assignment",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "chevron",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "dictionary_splat",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "dotted_name",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "elif_clause",
        "category": "if",
        "languages": ["py", "sh"]
    },
    {
        "type_name": "except_clause",
        "category": "catch_block",
        "languages": ["py"]
    },
    {
        "type_name": "for_in_clause",
        "category": "loop",
        "languages": ["py"]
    },
    {
        "type_name": "format_expression",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "format_specifier",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "if_clause",
        "category": "if",
        "languages": ["py"]
    },
    {
        "type_name": "import_prefix",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "keyword_argument",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "list_splat",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "parameters",
        "category": "",
        "languages": ["py", "rs"]
    },
    {
        "type_name": "parenthesized_list_splat",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "pattern_list",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "relative_import",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "slice",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "wildcard_import",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "with_clause",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "with_item",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "type_conversion",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "abstract_array_declarator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "abstract_function_declarator",
        "category": "function",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "abstract_parenthesized_declarator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "abstract_pointer_declarator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "abstract_reference_declarator",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "array_declarator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "attributed_declarator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "destructor_name",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "function_declarator",
        "category": "function",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "operator_name",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "parenthesized_declarator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "pointer_declarator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "qualified_identifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "reference_declarator",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "structured_binding_declarator",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "template_function",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "char_literal",
        "category": "",
        "languages": ["cpp", "rs", "c"]
    },
    {
        "type_name": "co_await_expression",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "compound_literal_expression",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "delete_expression",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "field_expression",
        "category": "",
        "languages": ["cpp", "rs", "c"]
    },
    {
        "type_name": "number_literal",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "parameter_pack_expansion",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "pointer_expression",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "sizeof_expression",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "user_defined_literal",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "template_method",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "co_return_statement",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "co_yield_statement",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "for_range_loop",
        "category": "loop",
        "languages": ["cpp"]
    },
    {
        "type_name": "auto",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "class_specifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "decltype",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "dependent_type",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "enum_specifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "sized_type_specifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "struct_specifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "template_type",
        "category": "",
        "languages": ["cpp", "ts", "tsx"]
    },
    {
        "type_name": "union_specifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "access_specifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "alias_declaration",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "attribute_declaration",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "attribute_specifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "attributed_statement",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "base_class_clause",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "bitfield_clause",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "comma_expression",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "condition_clause",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "default_method_clause",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "delete_method_clause",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "dependent_name",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "enumerator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "enumerator_list",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "explicit_function_specifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "field_designator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "field_initializer",
        "category": "",
        "languages": ["cpp", "rs"]
    },
    {
        "type_name": "field_initializer_list",
        "category": "",
        "languages": ["cpp", "rs"]
    },
    {
        "type_name": "friend_declaration",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "init_declarator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "initializer_list",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "initializer_pair",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "lambda_capture_specifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "lambda_default_capture",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "linkage_specification",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "ms_based_modifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "ms_call_modifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "ms_declspec_modifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "ms_pointer_modifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "ms_unaligned_ptr_modifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "namespace_alias_definition",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "new_declarator",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "noexcept",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "operator_cast",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "optional_parameter_declaration",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "optional_type_parameter_declaration",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "preproc_call",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "preproc_def",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "preproc_defined",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "preproc_elif",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "preproc_else",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "preproc_function_def",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "preproc_if",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "preproc_ifdef",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "preproc_include",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "preproc_params",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "ref_qualifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "static_assert_declaration",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "storage_class_specifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "subscript_designator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "template_argument_list",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "template_declaration",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "template_instantiation",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "template_parameter_list",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "template_template_parameter_declaration",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "throw_specifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "trailing_return_type",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "translation_unit",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "type_definition",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "type_descriptor",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "type_parameter_declaration",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "type_qualifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "using_declaration",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "variadic_declarator",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "variadic_type_parameter_declaration",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "virtual_specifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "literal_suffix",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "ms_restrict_modifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "ms_signed_ptr_modifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "ms_unsigned_ptr_modifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "namespace_identifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "preproc_arg",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "preproc_directive",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "system_lib_string",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "record_struct_declaration",
        "category": "record_definition",
        "languages": ["cs"]
    },
    {
        "type_name": "and_pattern",
        "category": "conditional_expression",
        "languages": ["cs"]
    },
    {
        "type_name": "define_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "elif_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "else_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "endregion_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "error_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "expression_colon",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "file_scoped_namespace_declaration",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "if_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "line_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "nullable_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "or_pattern",
        "category": "conditional_expression",
        "languages": ["cs", "rs"]
    },
    {
        "type_name": "pragma_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "region_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "slice_pattern",
        "category": "",
        "languages": ["cs", "rs"]
    },
    {
        "type_name": "undef_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "warning_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "endif_directive",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "preproc_integer_literal",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "preproc_message",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "preproc_string_literal",
        "category": "",
        "languages": ["cs"]
    },
    {
        "type_name": "iota",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "negated_type",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "literal_element",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "struct_elem",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "struct_term",
        "category": "",
        "languages": ["go"]
    },
    {
        "type_name": "block_comment",
        "category": "comment",
        "languages": ["java", "rs"]
    },
    {
        "type_name": "line_comment",
        "category": "comment",
        "languages": ["java", "kt", "rs"]
    },
    {
        "type_name": "exports_module_directive",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "opens_module_directive",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "provides_module_directive",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "requires_module_directive",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "uses_module_directive",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "template_expression",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "compact_constructor_declaration",
        "category": "function",
        "languages": ["java"]
    },
    {
        "type_name": "condition",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "guard",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "multiline_string_fragment",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "permits",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "record_pattern",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "record_pattern_body",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "record_pattern_component",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "string_interpolation",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "switch_block_statement_group",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "switch_rule",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "type_list",
        "category": "",
        "languages": ["java", "php"]
    },
    {
        "type_name": "string_fragment",
        "category": "",
        "languages": ["java", "js", "ts", "tsx"]
    },
    {
        "type_name": "underscore_pattern",
        "category": "",
        "languages": ["java"]
    },
    {
        "type_name": "glimmer_template",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "class_static_block",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "field_definition",
        "category": "",
        "languages": ["js"]
    },
    {
        "type_name": "glimmer_closing_tag",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "glimmer_opening_tag",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "namespace_export",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "optional_chain",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "private_property_identifier",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "character_escape_seq",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "function_value_parameters",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "getter",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "import_list",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "multi_variable_declaration",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "not_nullable_type",
        "category": "",
        "languages": ["kt"]
    },
    {
        "type_name": "multiline_comment",
        "category": "comment",
        "languages": ["kt"]
    },
    {
        "type_name": "match_expression",
        "category": "",
        "languages": ["php", "rs"]
    },
    {
        "type_name": "reference_assignment_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "encapsed_string",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "nowdoc",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "nullsafe_member_access_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "nullsafe_member_call_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "abstract_modifier",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "attribute_group",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "by_ref",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "enum_case",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "enum_declaration_list",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "final_modifier",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "heredoc_body",
        "category": "",
        "languages": ["php", "rb", "sh"]
    },
    {
        "type_name": "match_block",
        "category": "",
        "languages": ["php", "rs"]
    },
    {
        "type_name": "match_condition_list",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "match_conditional_expression",
        "category": "case_label",
        "languages": ["php"]
    },
    {
        "type_name": "match_default_expression",
        "category": "default_label",
        "languages": ["php"]
    },
    {
        "type_name": "named_type",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "nowdoc_body",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "property_promotion_parameter",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "readonly_modifier",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "reference_modifier",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "variadic_placeholder",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "bottom_type",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "heredoc_end",
        "category": "",
        "languages": ["php", "rb", "sh"]
    },
    {
        "type_name": "heredoc_start",
        "category": "",
        "languages": ["php", "sh"]
    },
    {
        "type_name": "nowdoc_string",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "string_value",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "template_literal_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "this_type",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "instantiation_expression",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "satisfies_expression",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "asserts_annotation",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "extends_type_clause",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "override_modifier",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "match_statement",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "type_alias_statement",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "as_pattern",
        "category": "",
        "languages": ["py", "rb"]
    },
    {
        "type_name": "keyword_separator",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "positional_separator",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "case_clause",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "case_pattern",
        "category": "case_label",
        "languages": ["py"]
    },
    {
        "type_name": "class_pattern",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "complex_pattern",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "constrained_type",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "dict_pattern",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "except_group_clause",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "keyword_pattern",
        "category": "",
        "languages": ["py", "rb"]
    },
    {
        "type_name": "member_type",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "splat_pattern",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "splat_type",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "string_content",
        "category": "",
        "languages": ["py", "cpp", "rb", "sh", "c", "json"]
    },
    {
        "type_name": "union_pattern",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "escape_interpolation",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "line_continuation",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "string_end",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "string_start",
        "category": "",
        "languages": ["py"]
    },
    {
        "type_name": "alignof_expression",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "fold_expression",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "generic_expression",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "gnu_asm_expression",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "offsetof_expression",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "requires_clause",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "requires_expression",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "placeholder_type_specifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "alignas_specifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "binary_expression_bitand",
        "category": "binary_expression",
        "languages": ["cpp"],
        "grammar_type_name": "binary_expression",
        "operator": "bitand"
    },
    {
        "type_name": "binary_expression_bitor",
        "category": "binary_expression",
        "languages": ["cpp"],
        "grammar_type_name": "binary_expression",
        "operator": "bitor"
    },
    {
        "type_name": "binary_expression_not_eq",
        "category": "binary_expression",
        "languages": ["cpp"],
        "grammar_type_name": "binary_expression",
        "operator": "not_eq"
    },
    {
        "type_name": "compound_requirement",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "concept_definition",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "constraint_conjunction",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "constraint_disjunction",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "gnu_asm_clobber_list",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "gnu_asm_goto_list",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "gnu_asm_input_operand",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "gnu_asm_input_operand_list",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "gnu_asm_output_operand",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "gnu_asm_output_operand_list",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "gnu_asm_qualifier",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "init_statement",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "nested_namespace_specifier",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "pointer_type_declarator",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "preproc_elifdef",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "requirement_seq",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "simple_requirement",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "subscript_argument_list",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "type_requirement",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "character",
        "category": "",
        "languages": ["cpp", "rb", "c"]
    },
    {
        "type_name": "raw_string_content",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "raw_string_delimiter",
        "category": "",
        "languages": ["cpp"]
    },
    {
        "type_name": "function_expression",
        "category": "function",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "import_attribute",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "html_character_reference",
        "category": "",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "html_comment",
        "category": "comment",
        "languages": ["js", "ts", "tsx"]
    },
    {
        "type_name": "const",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "adding_type_annotation",
        "category": "",
        "languages": ["ts", "tsx"]
    },
    {
        "type_name": "seh_leave_statement",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "seh_try_statement",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "seh_except_clause",
        "category": "catch_block",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "seh_finally_clause",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "subscript_range_designator",
        "category": "",
        "languages": ["cpp", "c"]
    },
    {
        "type_name": "error_suppression_expression",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "disjunctive_normal_form_type",
        "category": "",
        "languages": ["php"]
    },
    {
        "type_name": "_primary",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "binary",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "conditional",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "operator_assignment",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "range",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "unary",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "&.",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": ".",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "::",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "_arg",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "break",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "match_pattern",
        "category": "",
        "languages": ["rb", "rs"]
    },
    {
        "type_name": "next",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "return",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "test_pattern",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "_variable",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "element_reference",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "scope_resolution",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "_nonlocal_variable",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "constant",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "delimited_symbol",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "operator",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "simple_symbol",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "class_variable",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "global_variable",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "instance_variable",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "_pattern_expr_basic",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "alternative_pattern",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "_pattern_constant",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "_pattern_primitive",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "expression_reference_pattern",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "find_pattern",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "hash_pattern",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "variable_reference_pattern",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "_simple_numeric",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "encoding",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "file",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "heredoc_beginning",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "line",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "self",
        "category": "",
        "languages": ["rb", "rs"]
    },
    {
        "type_name": "string_array",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "concatenation",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "word",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "ansi_c_string",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "arithmetic_expansion",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "brace_expression",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "command_substitution",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "expansion",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "process_substitution",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "raw_string",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "simple_expansion",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "translated_string",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "c_style_for_statement",
        "category": "loop",
        "languages": ["sh"]
    },
    {
        "type_name": "command",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "declaration_command",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "negated_command",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "pipeline",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "redirected_statement",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "subshell",
        "category": "",
        "languages": ["rb", "sh"]
    },
    {
        "type_name": "symbol_array",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "_pattern_expr",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "_lhs",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "begin",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "case",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "case_match",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "chained_string",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "for",
        "category": "loop",
        "languages": ["rb"]
    },
    {
        "type_name": "hash",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "if",
        "category": "if",
        "languages": ["rb"]
    },
    {
        "type_name": "method",
        "category": "function",
        "languages": ["rb"]
    },
    {
        "type_name": "parenthesized_statements",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "redo",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "retry",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "singleton_class",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "singleton_method",
        "category": "function",
        "languages": ["rb"]
    },
    {
        "type_name": "unless",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "until",
        "category": "loop",
        "languages": ["rb"]
    },
    {
        "type_name": "while",
        "category": "loop",
        "languages": ["rb"]
    },
    {
        "type_name": "complex",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "rational",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "_expression",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "alias",
        "category": "",
        "languages": ["yaml", "rb", "pl"]
    },
    {
        "type_name": "begin_block",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "end_block",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "if_modifier",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "rescue_modifier",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "undef",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "unless_modifier",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "until_modifier",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "while_modifier",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "bare_string",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "bare_symbol",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "block_argument",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "block_body",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "block_parameter",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "block_parameters",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "body_statement",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "destructured_left_assignment",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "destructured_parameter",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "do",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "do_block",
        "category": "loop",
        "languages": ["rb"]
    },
    {
        "type_name": "else",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "elsif",
        "category": "if",
        "languages": ["rb"]
    },
    {
        "type_name": "ensure",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "exception_variable",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "exceptions",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "forward_argument",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "forward_parameter",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "hash_key_symbol",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "hash_splat_argument",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "hash_splat_nil",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "hash_splat_parameter",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "if_guard",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "in",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "in_clause",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "keyword_parameter",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "left_assignment_list",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "method_parameters",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "rescue",
        "category": "catch_block",
        "languages": ["rb"]
    },
    {
        "type_name": "rest_assignment",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "right_assignment_list",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "splat_argument",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "splat_parameter",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "then",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "unless_guard",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "when",
        "category": "case_label",
        "languages": ["rb"]
    },
    {
        "type_name": "test_command",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "unset_command",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "variable_assignment",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "variable_assignments",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "binary_expression_%=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "%="
    },
    {
        "type_name": "binary_expression_&=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "&="
    },
    {
        "type_name": "binary_expression_**=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "**="
    },
    {
        "type_name": "binary_expression_*=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "*="
    },
    {
        "type_name": "binary_expression_+=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "+="
    },
    {
        "type_name": "binary_expression_-=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "-="
    },
    {
        "type_name": "binary_expression_-a",
        "category": "logical_binary_expression",
        "languages": ["sh"],
        "grammar_type_name": "binary_expression",
        "operator": "-a"
    },
    {
        "type_name": "binary_expression_-o",
        "category": "logical_binary_expression",
        "languages": ["sh"],
        "grammar_type_name": "binary_expression",
        "operator": "-o"
    },
    {
        "type_name": "binary_expression_/=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "/="
    },
    {
        "type_name": "binary_expression_<<=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "<<="
    },
    {
        "type_name": "binary_expression_=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "="
    },
    {
        "type_name": "binary_expression_=~",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "=~"
    },
    {
        "type_name": "binary_expression_>>=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": ">>="
    },
    {
        "type_name": "binary_expression_^=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "^="
    },
    {
        "type_name": "binary_expression_test_operator",
        "category": "binary_expression",
        "languages": ["sh"],
        "grammar_type_name": "binary_expression",
        "operator": "test_operator"
    },
    {
        "type_name": "binary_expression_|=",
        "category": "binary_expression",
        "languages": ["sh", "pl"],
        "grammar_type_name": "binary_expression",
        "operator": "|="
    },
    {
        "type_name": "case_item",
        "category": "case_label",
        "languages": ["sh"]
    },
    {
        "type_name": "command_name",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "do_group",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "file_redirect",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "heredoc_redirect",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "herestring_redirect",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "extglob_pattern",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "file_descriptor",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "heredoc_content",
        "category": "",
        "languages": ["rb", "sh"]
    },
    {
        "type_name": "uninterpreted",
        "category": "",
        "languages": ["rb"]
    },
    {
        "type_name": "associated_type",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "attribute_item",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "const_item",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "enum_item",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "extern_crate_declaration",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "foreign_mod_item",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "function_item",
        "category": "function",
        "languages": ["rs"]
    },
    {
        "type_name": "function_signature_item",
        "category": "function",
        "languages": ["rs"]
    },
    {
        "type_name": "impl_item",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "inner_attribute_item",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "let_declaration",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "macro_definition",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "macro_invocation",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "mod_item",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "static_item",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "struct_item",
        "category": "struct_definition",
        "languages": ["rs"]
    },
    {
        "type_name": "trait_item",
        "category": "trait_definition",
        "languages": ["rs"]
    },
    {
        "type_name": "type_item",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "union_item",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "array_expression",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "async_block",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "break_expression",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "closure_expression",
        "category": "function",
        "languages": ["rs"]
    },
    {
        "type_name": "compound_assignment_expr",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "const_block",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "continue_expression",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "for_expression",
        "category": "loop",
        "languages": ["rs"]
    },
    {
        "type_name": "generic_function",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "loop_expression",
        "category": "loop",
        "languages": ["rs"]
    },
    {
        "type_name": "metavariable",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "reference_expression",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "return_expression",
        "category": "",
        "languages": ["rs", "pl"]
    },
    {
        "type_name": "struct_expression",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "type_cast_expression",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "unit_expression",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "unsafe_block",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "while_expression",
        "category": "loop",
        "languages": ["rs"]
    },
    {
        "type_name": "negative_literal",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "_",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "_literal_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "captured_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "mut_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "range_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "ref_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "reference_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "remaining_field_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "struct_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "tuple_struct_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "abstract_type",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "bounded_type",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "dynamic_type",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "empty_type",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "reference_type",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "unit_type",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "base_field_initializer",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "bracketed_type",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "closure_parameters",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "const_parameter",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "constrained_type_parameter",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "enum_variant",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "enum_variant_list",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "extern_modifier",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "field_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "for_lifetimes",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "fragment_specifier",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "function_modifiers",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "generic_type_with_turbofish",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "higher_ranked_trait_bound",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "let_chain",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "let_condition",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "lifetime",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "loop_label",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "macro_rule",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "match_arm",
        "category": "case_label",
        "languages": ["rs"]
    },
    {
        "type_name": "optional_type_parameter",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "ordered_field_declaration_list",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "removed_trait_bound",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "scoped_use_list",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "self_parameter",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "shorthand_field_initializer",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "token_binding_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "token_repetition",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "token_repetition_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "token_tree",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "token_tree_pattern",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "trait_bounds",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "type_binding",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "use_wildcard",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "where_predicate",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "crate",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "mutable_specifier",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "shebang",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "shorthand_field_identifier",
        "category": "",
        "languages": ["rs"]
    },
    {
        "type_name": "special_variable_name",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "test_operator",
        "category": "",
        "languages": ["sh"]
    },
    {
        "type_name": "macro_type_specifier",
        "category": "",
        "languages": ["c"]
    },
    {
        "type_name": "document",
        "category": "",
        "languages": ["json", "yaml"]
    },
    {
        "type_name": "anchor",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "block_mapping",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "block_mapping_pair",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "block_node",
        "category": "nesting",
        "languages": ["yaml"]
    },
    {
        "type_name": "block_scalar",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "block_sequence",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "block_sequence_item",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "double_quote_scalar",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "flow_mapping",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "flow_node",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "flow_pair",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "flow_sequence",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "plain_scalar",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "reserved_directive",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "single_quote_scalar",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "stream",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "tag_directive",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "yaml_directive",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "alias_name",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "anchor_name",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "boolean_scalar",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "directive_name",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "directive_parameter",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "float_scalar",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "integer_scalar",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "null_scalar",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "string_scalar",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "tag",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "tag_handle",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "tag_prefix",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "yaml_version",
        "category": "",
        "languages": ["yaml"]
    },
    {
        "type_name": "array_access_variable",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "array_dereference",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "array_function",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "array_ref",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "backtick_quoted",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "bareword",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "bareword_import",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "binary_expression_!~",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "!~"
    },
    {
        "type_name": "binary_expression_&&=",
        "category": "logical_binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "&&="
    },
    {
        "type_name": "binary_expression_&.=",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "&.="
    },
    {
        "type_name": "binary_expression_..",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": ".."
    },
    {
        "type_name": "binary_expression_...",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "..."
    },
    {
        "type_name": "binary_expression_.=",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": ".="
    },
    {
        "type_name": "binary_expression_//",
        "category": "logical_binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "//"
    },
    {
        "type_name": "binary_expression_//=",
        "category": "logical_binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "//="
    },
    {
        "type_name": "binary_expression_X=",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "X="
    },
    {
        "type_name": "binary_expression_^.=",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "^.="
    },
    {
        "type_name": "binary_expression_cmp",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "cmp"
    },
    {
        "type_name": "binary_expression_isa",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "isa"
    },
    {
        "type_name": "binary_expression_x",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "x"
    },
    {
        "type_name": "binary_expression_|.=",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "|.="
    },
    {
        "type_name": "binary_expression_||=",
        "category": "logical_binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "||="
    },
    {
        "type_name": "binary_expression_~~",
        "category": "binary_expression",
        "languages": ["pl"],
        "grammar_type_name": "binary_expression",
        "operator": "~~"
    },
    {
        "type_name": "bless",
        "category": "class_definition",
        "languages": ["pl"]
    },
    {
        "type_name": "call_expression_recursive",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "command_qx_quoted",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "comments",
        "category": "comment",
        "languages": ["pl"]
    },
    {
        "type_name": "continue",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "ellipsis_statement",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "elsif_clause",
        "category": "if",
        "languages": ["pl"]
    },
    {
        "type_name": "for_simple_statement",
        "category": "loop",
        "languages": ["pl"]
    },
    {
        "type_name": "for_statement_1",
        "category": "loop",
        "languages": ["pl"]
    },
    {
        "type_name": "for_statement_2",
        "category": "loop",
        "languages": ["pl"]
    },
    {
        "type_name": "function_attribute",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "function_prototype",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "goto_expression",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "hash_access_variable",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "hash_arrow_operator",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "hash_dereference",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "hash_ref",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "heredoc_body_statement",
        "category": "comment",
        "languages": ["pl"]
    },
    {
        "type_name": "heredoc_initializer",
        "category": "comment",
        "languages": ["pl"]
    },
    {
        "type_name": "if_simple_statement",
        "category": "if",
        "languages": ["pl"]
    },
    {
        "type_name": "key_value_pair",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "list_block",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "loop_control_keyword",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "loop_control_statement",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "module_name",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "multi_var_declaration",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "named_block_statement",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "package_name",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "package_statement",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "package_variable",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "parenthesized_argument",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "patter_matcher_m",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "pattern_matcher",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "pod_statement",
        "category": "comment",
        "languages": ["pl"]
    },
    {
        "type_name": "regex_pattern_qr",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "require_statement",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "scalar_dereference",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "scalar_variable",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "scope",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "single_line_statement",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "special_block",
        "category": "function",
        "languages": ["pl"]
    },
    {
        "type_name": "special_literal",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "special_scalar_variable",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "standalone_block",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "standard_input",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "standard_input_to_identifier",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "standard_input_to_variable",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "string_double_quoted",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "string_q_quoted",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "string_qq_quoted",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "string_single_quoted",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "substitution_pattern_s",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "to_reference",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "transliteration_tr_or_y",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "unless_simple_statement",
        "category": "conditional_expression",
        "languages": ["pl"]
    },
    {
        "type_name": "unless_statement",
        "category": "conditional_expression",
        "languages": ["pl"]
    },
    {
        "type_name": "until_simple_statement",
        "category": "loop",
        "languages": ["pl"]
    },
    {
        "type_name": "until_statement",
        "category": "loop",
        "languages": ["pl"]
    },
    {
        "type_name": "use_constant_statement",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "use_no_feature_statement",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "use_no_if_statement",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "use_no_statement",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "use_no_subs_statement",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "use_no_version",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "use_parent_statement",
        "category": "class_definition",
        "languages": ["pl"]
    },
    {
        "type_name": "version",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "when_simple_statement",
        "category": "case_label",
        "languages": ["pl"]
    },
    {
        "type_name": "while_simple_statement",
        "category": "loop",
        "languages": ["pl"]
    },
    {
        "type_name": "word_list_qw",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "array_variable",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "arrow_operator",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "end_delimiter",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "end_delimiter_qw",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "file_handle",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "floating_point",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "grep",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "hash_variable",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "heredoc_end_identifier",
        "category": "comment",
        "languages": ["pl"]
    },
    {
        "type_name": "heredoc_start_identifier",
        "category": "comment",
        "languages": ["pl"]
    },
    {
        "type_name": "hexadecimal",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "join",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "list_item",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "map",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "no_require",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "octal",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "prototype",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "push",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "regex_option",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "regex_option_for_substitution",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "regex_option_for_transliteration",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "reverse",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "scientific_notation",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "separator_delimiter",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "sort",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "start_delimiter",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "start_delimiter_qw",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "array_access_in_interpolation",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "call_expression_with_bareword",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "hash_access_in_interpolation",
        "category": "",
        "languages": ["pl"]
    },
    {
        "type_name": "function_name",
        "category": "",
        "languages": ["pl"]
    }
]
